plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.11-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id "org.sonarqube" version "5.1.0.4882"
}

group = 'com.systemcalls'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jacoco {
	toolVersion = "0.8.9"
}


sonar {
	properties {
		property "sonar.projectKey", "systemcalls"
		property "sonar.projectName", "systemcalls"
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://mvnrepository.com/artifact' }
}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.oshi:oshi-core:6.6.4'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	testLogging {
		events "passed","failed","skipped"
	}
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required=false
		csv.required=true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
